// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello_wrold.proto

#ifndef PROTOBUF_hello_5fwrold_2eproto__INCLUDED
#define PROTOBUF_hello_5fwrold_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_hello_5fwrold_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHelloWorldImpl();
void InitDefaultsHelloWorld();
inline void InitDefaults() {
  InitDefaultsHelloWorld();
}
}  // namespace protobuf_hello_5fwrold_2eproto
namespace smw {
namespace example {
namespace proto {
class HelloWorld;
class HelloWorldDefaultTypeInternal;
extern HelloWorldDefaultTypeInternal _HelloWorld_default_instance_;
}  // namespace proto
}  // namespace example
}  // namespace smw
namespace smw {
namespace example {
namespace proto {

// ===================================================================

class HelloWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smw.example.proto.HelloWorld) */ {
 public:
  HelloWorld();
  virtual ~HelloWorld();

  HelloWorld(const HelloWorld& from);

  inline HelloWorld& operator=(const HelloWorld& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloWorld(HelloWorld&& from) noexcept
    : HelloWorld() {
    *this = ::std::move(from);
  }

  inline HelloWorld& operator=(HelloWorld&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloWorld& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloWorld* internal_default_instance() {
    return reinterpret_cast<const HelloWorld*>(
               &_HelloWorld_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HelloWorld* other);
  friend void swap(HelloWorld& a, HelloWorld& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloWorld* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloWorld* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloWorld& from);
  void MergeFrom(const HelloWorld& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloWorld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smw.example.proto.HelloWorld)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 index_;
  mutable int _cached_size_;
  friend struct ::protobuf_hello_5fwrold_2eproto::TableStruct;
  friend void ::protobuf_hello_5fwrold_2eproto::InitDefaultsHelloWorldImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HelloWorld

// int32 index = 1;
inline void HelloWorld::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 HelloWorld::index() const {
  // @@protoc_insertion_point(field_get:smw.example.proto.HelloWorld.index)
  return index_;
}
inline void HelloWorld::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:smw.example.proto.HelloWorld.index)
}

// string message = 2;
inline void HelloWorld::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloWorld::message() const {
  // @@protoc_insertion_point(field_get:smw.example.proto.HelloWorld.message)
  return message_.GetNoArena();
}
inline void HelloWorld::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smw.example.proto.HelloWorld.message)
}
#if LANG_CXX11
inline void HelloWorld::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smw.example.proto.HelloWorld.message)
}
#endif
inline void HelloWorld::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smw.example.proto.HelloWorld.message)
}
inline void HelloWorld::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smw.example.proto.HelloWorld.message)
}
inline ::std::string* HelloWorld::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:smw.example.proto.HelloWorld.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloWorld::release_message() {
  // @@protoc_insertion_point(field_release:smw.example.proto.HelloWorld.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloWorld::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:smw.example.proto.HelloWorld.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace example
}  // namespace smw

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hello_5fwrold_2eproto__INCLUDED
